### Authenticate user & get token
# @info Use https://jwt.io/ to investigate response jwt value.
POST {{apiUrl}}users/login
Accept: application/json
Content-Type: application/json

{
  "email": "admin@example.com",
  "password": "123456"
}
> {% client.global.set("auth_Token", response.body.token); %}

### Register a new user
POST {{apiUrl}}users
Accept: application/json
Content-Type: application/json

{
  "name": "Steve Smith",
  "email": "steve@example.com",
  "password": "123456"
}
> {% client.global.set("auth_Token", response.body.token); %}


### Return user profile
GET {{apiUrl}}users/profile
Authorization: Bearer {{auth_Token}}

### Update user profile
PUT {{apiUrl}}users/profile
Authorization: Bearer {{auth_Token}}
Content-Type: application/json

{
  "name": "John Doe",
  "email": "john@example.com",
  "password": "123456"
}

### Get all users. Admin only.
GET {{apiUrl}}users
Authorization: Bearer {{auth_Token}}

### Delete a user. Admin only.
DELETE {{apiUrl}}users/61ace0a177bc23ca1bdeafb7
Authorization: Bearer {{auth_Token}}

### Get user by id. Admin only.
GET {{apiUrl}}users/618ea6ef19c4c4bb8c46a6fa
Authorization: Bearer {{auth_Token}}

### Update user by id
PUT {{apiUrl}}users/618ea6ef19c4c4bb8c46a6fa
Authorization: Bearer {{auth_Token}}
Content-Type: application/json

{
  "name": "Jane Doe",
  "email": "jane@example.com",
  "admin": false
}